<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                           http://www.springframework.org/schema/mvc
                           http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-3.2.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
                           http://www.springframework.org/schema/security 
                           http://www.springframework.org/schema/security/spring-security.xsd">

	<!-- 开启注解扫描, 要扫描的是service层和dao层的注解, 要忽略web层注解, 因为web层让springMVC框架去管理 -->
	<context:component-scan base-package="ds">
		<!-- 配置忽略的注解 -->
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>


	<!-- 配置druid数据源 -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql:///ssm_travel" />
		<property name="username" value="root" />
		<property name="password" value="123" />
	</bean>

	<!-- 配置SqlSession工厂 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="typeAliasesPackage" value="ds.domain"></property>
		<property name="plugins">
			<array>
				<bean class="com.github.pagehelper.PageInterceptor">
					<property name="properties">
						<props>
							<prop key="helperDialect">mysql</prop>
							<prop key="reasonable">true</prop>
						</props>
					</property>
				</bean>
			</array>
		</property>
	</bean>

	<!-- 配置扫描dao的包 -->
	<bean id="mapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="ds.dao" />
	</bean>

	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 开启事务的注解驱动 -->
	<tx:annotation-driven />

	<!-- 不拦截静态资源 -->
	<security:http pattern="/css/**" security="none" />
	<security:http pattern="/img/**" security="none" />
	<security:http pattern="/plugins/**" security="none" />
	<security:http pattern="/pages/**" security="none" />

	<!-- 登录页面不拦截 -->
	<security:http pattern="/login.jsp" security="none" />
	<security:http pattern="/failer.jsp" security="none" />
	
	<!-- 配置拦截的规则 -->
	<security:http auto-config="true" use-expressions="true">
        <security:intercept-url pattern="/**" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')"/>

        <!-- 开启表单登录功能 -->
        <security:form-login 
            login-page="/login.jsp"
            default-target-url="/index.jsp"
            authentication-failure-url="/login.jsp?error=true"
            always-use-default-target="true"/>
        <!-- csrf: 跨站请求伪造, 如果不关闭, 则会报403 -->
        <security:csrf disabled="true"/>
        <security:headers>
            <!-- spring security默认拦截iframe框架, 加上这个配置设置不拦截 -->
            <security:frame-options policy="SAMEORIGIN"/>
        </security:headers>
        <!-- logout: 自动产生一个/logout的地址, 访问即可退出当前用户 -->
        <security:logout invalidate-session="true" logout-url="/logout" logout-success-url="/login.jsp"/>

        <security:access-denied-handler error-page="/403.jsp"/>
        
        <!-- 配置自动登录 -->
        <security:remember-me/>
    </security:http>

	<security:authentication-manager erase-credentials="false">
	   <!-- 提供服务类, 去数据库查询用户名密码 -->
		<security:authentication-provider user-service-ref="userService">
		  <!-- 提供加密方式 -->
		  <security:password-encoder ref="passwordEncoder"/>
		</security:authentication-provider>
	</security:authentication-manager>
	
	
	<!-- 配置加密类 -->
	<bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>
	
	<!-- 开启JSR-250的注解支持 -->
	<!-- <security:global-method-security jsr250-annotations="enabled"/> -->
	
	<!-- security注解方式权限拦截 -->
	<security:global-method-security secured-annotations="enabled"></security:global-method-security>
</beans>